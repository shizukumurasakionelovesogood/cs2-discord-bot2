import disnake
from disnake.ext import commands
import asyncio
from collections import defaultdict
import random
from cs2_player_tracker import CS2PlayerTracker
from yes_no_game import YesNoGame
import os
from dotenv import load_dotenv
import http.server
import threading

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
load_dotenv()

# –°–æ–∑–¥–∞–µ–º –±–æ—Ç–∞
intents = disnake.Intents.default()
intents.members = True
intents.message_content = True
bot = commands.InteractionBot(intents=intents)

# –°–ª–æ–≤–∞—Ä—å –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —Å—á–µ—Ç–∞ –∏–≥—Ä–æ–∫–æ–≤
player_scores = defaultdict(int)

# –°–ª–æ–≤–∞—Ä—å –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –∞–∫—Ç–∏–≤–Ω—ã—Ö –∏–≥—Ä
active_games = {}

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è CS2 —Ç—Ä–µ–∫–µ—Ä–∞
tracker = CS2PlayerTracker()

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∏–≥—Ä—ã "–î–∞ –∏–ª–∏ –ù–µ—Ç"
yes_no_game = YesNoGame()

# ID –∫–∞–Ω–∞–ª–∞ –¥–ª—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
NOTIFICATION_CHANNEL_ID = 1353101922227191962

async def check_players_status():
    while True:
        messages = tracker.check_players_status()
        for chat_id, message in messages:
            try:
                channel = bot.get_channel(chat_id)
                if channel:
                    await channel.send(message)
            except Exception as e:
                print(f"–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è: {e}")
        await asyncio.sleep(30)  # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–∞–∂–¥—ã–µ 30 —Å–µ–∫—É–Ω–¥

@bot.event
async def on_ready():
    print(f"‚úÖ Bot {bot.user} —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω!")
    # –ó–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É —Å—Ç–∞—Ç—É—Å–∞ –∏–≥—Ä–æ–∫–æ–≤
    bot.loop.create_task(check_players_status())

@bot.event
async def on_member_join(member):
    guild = member.guild
    role = disnake.utils.get(guild.roles, id=1353051664067727531)  # –£–∫–∞–∂–∏ —Å–≤–æ–π ID —Ä–æ–ª–∏
    if role:
        try:
            await member.add_roles(role)
            print(f"‚úÖ –ù–∞–∑–Ω–∞—á–µ–Ω–∞ —Ä–æ–ª—å {role.name} –¥–ª—è {member.name}")
        except disnake.Forbidden:
            print("‚ùå –û—à–∏–±–∫–∞: —É –±–æ—Ç–∞ –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤!")
        except Exception as e:
            print(f"‚ùå –ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞: {e}")
    else:
        print("‚ùå –†–æ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω–∞!")

@bot.event
async def on_message(message):
    # –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è –æ—Ç –±–æ—Ç–æ–≤
    if message.author.bot:
        return
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –∞–∫—Ç–∏–≤–Ω–∞—è –∏–≥—Ä–∞
    if not active_games:
        return
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ –∏–≥—Ä–æ–≤–æ–π –∫–∞–Ω–∞–ª
    game_channel_id = 1353043535468826705
    if message.channel.id != game_channel_id:
        return
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ - "—è" (—Ä–µ–≥–∏—Å—Ç—Ä–æ–Ω–µ–∑–∞–≤–∏—Å–∏–º–æ)
    if message.content.lower() == "—è":
        game_id = list(active_games.keys())[-1]
        game = active_games[game_id]
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∏–≥—Ä–æ–∫ –µ—â–µ –Ω–µ –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏–ª—Å—è –∫ –∏–≥—Ä–µ
        if message.author.id in game["joined_players"]:
            await message.channel.send(f"{message.author.mention}, –≤—ã —É–∂–µ –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏–ª–∏—Å—å –∫ –∏–≥—Ä–µ!", delete_after=5)
            return
        
        # –î–æ–±–∞–≤–ª—è–µ–º –∏–≥—Ä–æ–∫–∞ –≤ —Å–ø–∏—Å–æ–∫ –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏–≤—à–∏—Ö—Å—è
        game["joined_players"].append(message.author.id)
        await message.channel.send(f"üéÆ {message.author.mention} –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏–ª—Å—è –∫ –∏–≥—Ä–µ! –í—Å–µ–≥–æ –∏–≥—Ä–æ–∫–æ–≤: {len(game['joined_players'])}")

# –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Å–ª—É—á–∞–π–Ω–æ–≥–æ —á–∏—Å–ª–∞
@bot.slash_command(
    name="randomnumber",
    description="–°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å —Å–ª—É—á–∞–π–Ω–æ–µ —á–∏—Å–ª–æ –≤ –∑–∞–¥–∞–Ω–Ω–æ–º –¥–∏–∞–ø–∞–∑–æ–Ω–µ",
    guild_ids=[994523162148601886]
)
async def randomnumber(
    inter,
    min_number: int = commands.Param(
        description="–ú–∏–Ω–∏–º–∞–ª—å–Ω–æ–µ —á–∏—Å–ª–æ –¥–∏–∞–ø–∞–∑–æ–Ω–∞",
        default=1
    ),
    max_number: int = commands.Param(
        description="–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ —á–∏—Å–ª–æ –¥–∏–∞–ø–∞–∑–æ–Ω–∞",
        ge=2,  # –ú–∏–Ω–∏–º–∞–ª—å–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ 2
        le=1000000  # –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ 1000000
    )
):
    # –ü—Ä–æ–≤–µ—Ä–∫–∞, —á—Ç–æ –∫–æ–º–∞–Ω–¥–∞ –∑–∞–ø—É—â–µ–Ω–∞ –≤ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–º –∫–∞–Ω–∞–ª–µ
    game_channel_id = 1353043535468826705  # ID –∏–≥—Ä–æ–≤–æ–≥–æ –∫–∞–Ω–∞–ª–∞
    
    if inter.channel.id != game_channel_id:
        return await inter.response.send_message(
            f"–ö–æ–º–∞–Ω–¥–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –≤ <#{game_channel_id}>!",
            ephemeral=True
        )
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç—å –¥–∏–∞–ø–∞–∑–æ–Ω–∞
    if min_number >= max_number:
        return await inter.response.send_message(
            "–û—à–∏–±–∫–∞: –º–∏–Ω–∏–º–∞–ª—å–Ω–æ–µ —á–∏—Å–ª–æ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –º–µ–Ω—å—à–µ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–≥–æ!",
            ephemeral=True
        )
    
    # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Å–ª—É—á–∞–π–Ω–æ–µ —á–∏—Å–ª–æ
    random_number = random.randint(min_number, max_number)
    
    await inter.response.send_message(
        f"üé≤ {inter.author.mention} –∑–∞–ø—Ä–æ—Å–∏–ª —Å–ª—É—á–∞–π–Ω–æ–µ —á–∏—Å–ª–æ –æ—Ç {min_number} –¥–æ {max_number}.\n"
        f"**–†–µ–∑—É–ª—å—Ç–∞—Ç: {random_number}**"
    )

@bot.slash_command(
    name="execution",
    description="–û—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—à–Ω–æ–º –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏",
    guild_ids=[994523162148601886]
)
async def execution(inter):
    channel_id = 1353043535468826705
   
    channel = bot.get_channel(channel_id)
    if channel:
        await channel.send("—Ö—É–π –æ—Ç—Ä–µ–∑–∞–Ω —É—Å–ø–µ—à–Ω–æ ‚úÖ")
        await inter.response.send_message("–£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ!")
    else:
        await inter.response.send_message("–ö–∞–Ω–∞–ª –Ω–µ –Ω–∞–π–¥–µ–Ω!", ephemeral=True)

# –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –Ω–∞—á–∞–ª–∞ –∏–≥—Ä—ã –ö–∞–º–µ–Ω—å-–ù–æ–∂–Ω–∏—Ü—ã-–ë—É–º–∞–≥–∞
@bot.slash_command(
    name="startgame",
    description="–ù–∞—á–∞—Ç—å –∏–≥—Ä—É –≤ –ö–∞–º–µ–Ω—å-–ù–æ–∂–Ω–∏—Ü—ã-–ë—É–º–∞–≥–∞",
    guild_ids=[994523162148601886]
)
async def startgame(inter):
    # –ü—Ä–æ–≤–µ—Ä–∫–∞, —á—Ç–æ –∏–≥—Ä–∞ –∑–∞–ø—É—â–µ–Ω–∞ –≤ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–º –∫–∞–Ω–∞–ª–µ
    game_channel_id = 1353043535468826705  # –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ ID –≤–∞—à–µ–≥–æ –∏–≥—Ä–æ–≤–æ–≥–æ –∫–∞–Ω–∞–ª–∞
    
    if inter.channel.id != game_channel_id:
        return await inter.response.send_message(
            f"–ò–≥—Ä–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –≤ <#{game_channel_id}>!", 
            ephemeral=True
        )
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞, —á—Ç–æ –Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω–æ–π –∏–≥—Ä—ã
    if active_games:
        return await inter.response.send_message(
            "–£–∂–µ –µ—Å—Ç—å –∞–∫—Ç–∏–≤–Ω–∞—è –∏–≥—Ä–∞! –î–æ–∂–¥–∏—Ç–µ—Å—å –µ—ë –æ–∫–æ–Ω—á–∞–Ω–∏—è.",
            ephemeral=True
        )
    
    # –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—É—é –∏–≥—Ä—É
    game_id = str(inter.id)
    active_games[game_id] = {
        "players": {},
        "joined_players": [inter.author.id],  # –°–ø–∏—Å–æ–∫ –∏–≥—Ä–æ–∫–æ–≤, –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏–≤—à–∏—Ö—Å—è –∫ –∏–≥—Ä–µ
        "timeout": 30,  # –¢–∞–π–º–∞—É—Ç –∏–≥—Ä—ã –≤ —Å–µ–∫—É–Ω–¥–∞—Ö
        "created_by": inter.author.id,
        "channel": inter.channel,
        "status": "waiting"  # –°—Ç–∞—Ç—É—Å –∏–≥—Ä—ã: waiting (–æ–∂–∏–¥–∞–Ω–∏–µ –∏–≥—Ä–æ–∫–æ–≤), started (–∏–≥—Ä–∞ –Ω–∞—á–∞–ª–∞—Å—å)
    }
    
    await inter.response.send_message(
        f"üéÆ {inter.author.mention} –Ω–∞—á–∞–ª –∏–≥—Ä—É –≤ –ö–∞–º–µ–Ω—å-–ù–æ–∂–Ω–∏—Ü—ã-–ë—É–º–∞–≥–∞!\n"
        f"–ü—Ä–∏—Å–æ–µ–¥–∏–Ω—è–π—Ç–µ—Å—å –∫ –∏–≥—Ä–µ, –Ω–∞–ø–∏—Å–∞–≤ **—è** –≤ —ç—Ç–æ–º –∫–∞–Ω–∞–ª–µ.\n"
        f"–£ –≤–∞—Å –µ—Å—Ç—å 30 —Å–µ–∫—É–Ω–¥, —á—Ç–æ–±—ã –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç—å—Å—è.\n"
        f"–°–æ–∑–¥–∞—Ç–µ–ª—å –∏–≥—Ä—ã –º–æ–∂–µ—Ç –Ω–∞—á–∞—Ç—å –∏–≥—Ä—É –∫–æ–º–∞–Ω–¥–æ–π `/startmatch`\n"
        f"–∏–ª–∏ –∏–≥—Ä–∞ –Ω–∞—á–Ω–µ—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —á–µ—Ä–µ–∑ 30 —Å–µ–∫—É–Ω–¥."
    )
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–∞–π–º–µ—Ä –∏–≥—Ä—ã
    timeout_task = asyncio.create_task(game_timeout(game_id, inter.channel))
    active_games[game_id]["timeout_task"] = timeout_task

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Ç–∞–π–º–∞—É—Ç–∞ –∏–≥—Ä—ã
async def game_timeout(game_id, channel):
    await asyncio.sleep(active_games[game_id]["timeout"])
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –∏–≥—Ä–∞ –µ—â–µ –≤ —Å–ø–∏—Å–∫–µ –∞–∫—Ç–∏–≤–Ω—ã—Ö
    if game_id in active_games:
        game = active_games[game_id]
        
        # –ï—Å–ª–∏ —Å—Ç–∞—Ç—É—Å –≤—Å–µ –µ—â–µ "waiting", –Ω–∞—á–∏–Ω–∞–µ–º –∏–≥—Ä—É –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏
        if game["status"] == "waiting":
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ª–∏ –∏–≥—Ä–æ–∫–æ–≤
            if len(game["joined_players"]) < 2:
                await channel.send("‚è±Ô∏è –í—Ä–µ–º—è –≤—ã—à–ª–æ! –ò–≥—Ä–∞ –æ—Ç–º–µ–Ω–µ–Ω–∞ –∏–∑-–∑–∞ –Ω–µ–¥–æ—Å—Ç–∞—Ç–∫–∞ –∏–≥—Ä–æ–∫–æ–≤ (–Ω—É–∂–Ω–æ –º–∏–Ω–∏–º—É–º 2).")
                del active_games[game_id]
                return
            
            # –ú–µ–Ω—è–µ–º —Å—Ç–∞—Ç—É—Å –∏–≥—Ä—ã
            game["status"] = "started"
            
            # –ù–∞—á–∏–Ω–∞–µ–º –∏–≥—Ä—É
            await channel.send(f"‚è±Ô∏è –í—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è –∏—Å—Ç–µ–∫–ª–æ! –ò–≥—Ä–∞ –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è —Å {len(game['joined_players'])} –∏–≥—Ä–æ–∫–∞–º–∏!")
            await start_match(channel, game_id)

# –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è —Ä—É—á–Ω–æ–≥–æ –∑–∞–ø—É—Å–∫–∞ –∏–≥—Ä—ã —Å–æ–∑–¥–∞—Ç–µ–ª–µ–º
@bot.slash_command(
    name="startmatch",
    description="–ù–∞—á–∞—Ç—å –º–∞—Ç—á —Å –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏–≤—à–∏–º–∏—Å—è –∏–≥—Ä–æ–∫–∞–º–∏",
    guild_ids=[994523162148601886]
)
async def startmatch(inter):
    # –ü—Ä–æ–≤–µ—Ä–∫–∞, —á—Ç–æ –∏–≥—Ä–∞ –∑–∞–ø—É—â–µ–Ω–∞ –≤ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–º –∫–∞–Ω–∞–ª–µ
    game_channel_id = 1353043535468826705
    
    if inter.channel.id != game_channel_id:
        return await inter.response.send_message(
            f"–ò–≥—Ä–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –≤ <#{game_channel_id}>!", 
            ephemeral=True
        )
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞, –µ—Å—Ç—å –ª–∏ –∞–∫—Ç–∏–≤–Ω–∞—è –∏–≥—Ä–∞
    if not active_games:
        return await inter.response.send_message(
            "–°–µ–π—á–∞—Å –Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω–æ–π –∏–≥—Ä—ã! –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ `/startgame` —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –∏–≥—Ä—É.",
            ephemeral=True
        )
    
    game_id = list(active_games.keys())[-1]
    game = active_games[game_id]
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞, —á—Ç–æ –∫–æ–º–∞–Ω–¥—É –≤—ã–∑–≤–∞–ª —Å–æ–∑–¥–∞—Ç–µ–ª—å –∏–≥—Ä—ã
    if inter.author.id != game["created_by"]:
        return await inter.response.send_message(
            "–¢–æ–ª—å–∫–æ —Å–æ–∑–¥–∞—Ç–µ–ª—å –∏–≥—Ä—ã –º–æ–∂–µ—Ç –Ω–∞—á–∞—Ç—å –º–∞—Ç—á!",
            ephemeral=True
        )
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞, —á—Ç–æ –∏–≥—Ä–∞ –≤—Å–µ –µ—â–µ –≤ —Ä–µ–∂–∏–º–µ –æ–∂–∏–¥–∞–Ω–∏—è
    if game["status"] != "waiting":
        return await inter.response.send_message(
            "–ò–≥—Ä–∞ —É–∂–µ –Ω–∞—á–∞–ª–∞—Å—å!",
            ephemeral=True
        )
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞, —á—Ç–æ –µ—Å—Ç—å –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –∏–≥—Ä–æ–∫–æ–≤
    if len(game["joined_players"]) < 2:
        return await inter.response.send_message(
            "–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –∏–≥—Ä–æ–∫–æ–≤ –¥–ª—è –Ω–∞—á–∞–ª–∞ –º–∞—Ç—á–∞ (–Ω—É–∂–Ω–æ –º–∏–Ω–∏–º—É–º 2)!",
            ephemeral=True
        )
    
    # –û—Ç–º–µ–Ω—è–µ–º —Ç–∞–π–º–∞—É—Ç, –µ—Å–ª–∏ –æ–Ω –µ—â–µ –∞–∫—Ç–∏–≤–µ–Ω
    if "timeout_task" in game and not game["timeout_task"].done():
        game["timeout_task"].cancel()
    
    # –ú–µ–Ω—è–µ–º —Å—Ç–∞—Ç—É—Å –∏–≥—Ä—ã
    game["status"] = "started"
    
    await inter.response.send_message(f"üé≤ –ú–∞—Ç—á –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è —Å {len(game['joined_players'])} –∏–≥—Ä–æ–∫–∞–º–∏!")
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º –º–∞—Ç—á
    await start_match(inter.channel, game_id)

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –º–∞—Ç—á–∞
async def start_match(channel, game_id):
    game = active_games[game_id]
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –Ω–∞—á–∞–ª–µ –º–∞—Ç—á–∞ –∏ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏
    await channel.send(
        "üéØ **–ú–∞—Ç—á –Ω–∞—á–∞–ª—Å—è!**\n"
        "–£ –≤–∞—Å –µ—Å—Ç—å 30 —Å–µ–∫—É–Ω–¥, —á—Ç–æ–±—ã —Å–¥–µ–ª–∞—Ç—å —Å–≤–æ–π –≤—ã–±–æ—Ä.\n"
        "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Å–ª–µ–¥—É—é—â–∏–µ –∫–æ–º–∞–Ω–¥—ã –¥–ª—è –∏–≥—Ä—ã:\n"
        "- `/rock` –¥–ª—è –≤—ã–±–æ—Ä–∞ –∫–∞–º–Ω—è ü™®\n"
        "- `/paper` –¥–ª—è –≤—ã–±–æ—Ä–∞ –±—É–º–∞–≥–∏ üìÑ\n"
        "- `/scissors` –¥–ª—è –≤—ã–±–æ—Ä–∞ –Ω–æ–∂–Ω–∏—Ü ‚úÇÔ∏è"
    )
    
    # –°–æ–∑–¥–∞–µ–º —Ç–∞–π–º–µ—Ä –¥–ª—è –æ–∫–æ–Ω—á–∞–Ω–∏—è –º–∞—Ç—á–∞
    match_timer = asyncio.create_task(match_timeout(game_id, channel))
    active_games[game_id]["match_timer"] = match_timer

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Ç–∞–π–º–∞—É—Ç–∞ –º–∞—Ç—á–∞
async def match_timeout(game_id, channel):
    await asyncio.sleep(30)  # –î–∞–µ–º 30 —Å–µ–∫—É–Ω–¥ –Ω–∞ –≤—ã–±–æ—Ä
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –∏–≥—Ä–∞ –µ—â–µ –≤ —Å–ø–∏—Å–∫–µ –∞–∫—Ç–∏–≤–Ω—ã—Ö
    if game_id in active_games:
        game = active_games[game_id]
        
        # –ü–æ–ª—É—á–∞–µ–º –∏–≥—Ä–æ–∫–æ–≤, –∫–æ—Ç–æ—Ä—ã–µ —Å–¥–µ–ª–∞–ª–∏ —Å–≤–æ–π –≤—ã–±–æ—Ä
        players_made_choice = list(game["players"].keys())
        
        # –ï—Å–ª–∏ –Ω–∏–∫—Ç–æ –Ω–µ —Å–¥–µ–ª–∞–ª –≤—ã–±–æ—Ä, –æ—Ç–º–µ–Ω—è–µ–º –∏–≥—Ä—É
        if len(players_made_choice) == 0:
            await channel.send("‚è±Ô∏è –ù–∏–∫—Ç–æ –Ω–µ —Å–¥–µ–ª–∞–ª –≤—ã–±–æ—Ä! –ò–≥—Ä–∞ –æ—Ç–º–µ–Ω–µ–Ω–∞.")
            del active_games[game_id]
            return
        
        # –ï—Å–ª–∏ —Ç–æ–ª—å–∫–æ –æ–¥–∏–Ω –∏–≥—Ä–æ–∫ —Å–¥–µ–ª–∞–ª –≤—ã–±–æ—Ä, –æ–Ω –ø–æ–±–µ–∂–¥–∞–µ—Ç –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
        if len(players_made_choice) == 1:
            player_id = players_made_choice[0]
            player = bot.get_user(player_id)
            
            await channel.send(f"‚è±Ô∏è –¢–æ–ª—å–∫–æ {player.mention} —Å–¥–µ–ª–∞–ª –≤—ã–±–æ—Ä! –ü–æ–±–µ–¥–∞ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é!")
            player_scores[player_id] += 1
            
            await channel.send(f"üèÜ {player.mention} –ø–æ–±–µ–∂–¥–∞–µ—Ç! (–í—Å–µ–≥–æ –ø–æ–±–µ–¥: {player_scores[player_id]})")
            
            del active_games[game_id]
            return
        
        # –ï—Å–ª–∏ –Ω–µ—Å–∫–æ–ª—å–∫–æ –∏–≥—Ä–æ–∫–æ–≤ —Å–¥–µ–ª–∞–ª–∏ –≤—ã–±–æ—Ä, –æ–ø—Ä–µ–¥–µ–ª—è–µ–º –ø–æ–±–µ–¥–∏—Ç–µ–ª—è
        await determine_winners(channel, game_id)

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –ø–æ–±–µ–¥–∏—Ç–µ–ª–µ–π
async def determine_winners(channel, game_id):
    if game_id not in active_games:
        return
    
    game = active_games[game_id]
    players = game["players"]
    
    # –ï—Å–ª–∏ –º–µ–Ω—å—à–µ 2 –∏–≥—Ä–æ–∫–æ–≤ —Å–¥–µ–ª–∞–ª–∏ –≤—ã–±–æ—Ä, –æ—Ç–º–µ–Ω—è–µ–º —Ñ—É–Ω–∫—Ü–∏—é
    # (—ç—Ç–æ –Ω–µ –¥–æ–ª–∂–Ω–æ –ø—Ä–æ–∏–∑–æ–π—Ç–∏, —Ç–∞–∫ –∫–∞–∫ match_timeout —É–∂–µ –ø—Ä–æ–≤–µ—Ä—è–µ—Ç —ç—Ç–æ)
    if len(players) < 2:
        return
    
    # –û—Ç–º–µ–Ω—è–µ–º —Ç–∞–π–º–µ—Ä –º–∞—Ç—á–∞, –µ—Å–ª–∏ –æ–Ω –µ—â–µ –∞–∫—Ç–∏–≤–µ–Ω
    if "match_timer" in game and not game["match_timer"].done():
        game["match_timer"].cancel()
    
    # –°–æ–æ–±—â–∞–µ–º, —á—Ç–æ —Å–∫–æ—Ä–æ –±—É–¥—É—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
    await channel.send("‚è≥ –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –±—É–¥—É—Ç –æ–±—ä—è–≤–ª–µ–Ω—ã —á–µ—Ä–µ–∑ 10 —Å–µ–∫—É–Ω–¥...")
    
    # –ñ–¥–µ–º 10 —Å–µ–∫—É–Ω–¥ –ø–µ—Ä–µ–¥ –æ–±—ä—è–≤–ª–µ–Ω–∏–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
    await asyncio.sleep(10)
    
    # –°–æ–±–∏—Ä–∞–µ–º –¥–∞–Ω–Ω—ã–µ –æ –≤—ã–±–æ—Ä–∞—Ö –∏–≥—Ä–æ–∫–æ–≤
    choices_info = []
    for player_id, choice in players.items():
        player = bot.get_user(player_id)
        choices_info.append(f"{player.mention}: {get_emoji(choice)} {choice.capitalize()}")
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –≤—ã–±–æ—Ä—ã –∏–≥—Ä–æ–∫–æ–≤
    await channel.send("–í—ã–±–æ—Ä—ã –∏–≥—Ä–æ–∫–æ–≤:\n" + "\n".join(choices_info))
    
    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –ø–æ–±–µ–¥–∏—Ç–µ–ª–µ–π
    # –î–ª—è –∫–∞–∂–¥–æ–≥–æ –∏–≥—Ä–æ–∫–∞ —Å—á–∏—Ç–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–±–µ–¥ –Ω–∞–¥ –¥—Ä—É–≥–∏–º–∏ –∏–≥—Ä–æ–∫–∞–º–∏
    win_counts = defaultdict(int)
    
    player_ids = list(players.keys())
    
    # –°—Ä–∞–≤–Ω–∏–≤–∞–µ–º –∫–∞–∂–¥–æ–≥–æ –∏–≥—Ä–æ–∫–∞ —Å –∫–∞–∂–¥—ã–º
    for i in range(len(player_ids)):
        for j in range(i + 1, len(player_ids)):
            player1_id = player_ids[i]
            player2_id = player_ids[j]
            
            player1_choice = players[player1_id]
            player2_choice = players[player2_id]
            
            # –ï—Å–ª–∏ –Ω–∏—á—å—è, –Ω–∏–∫—Ç–æ –Ω–µ –ø–æ–ª—É—á–∞–µ—Ç –æ—á–∫–æ
            if player1_choice == player2_choice:
                continue
            
            # –ï—Å–ª–∏ –ø–µ—Ä–≤—ã–π –∏–≥—Ä–æ–∫ –ø–æ–±–µ–∂–¥–∞–µ—Ç –≤—Ç–æ—Ä–æ–≥–æ
            if beats(player1_choice, player2_choice):
                win_counts[player1_id] += 1
            else:
                win_counts[player2_id] += 1
    
    # –ù–∞—Ö–æ–¥–∏–º –∏–≥—Ä–æ–∫–∞(–æ–≤) —Å –º–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ–º –ø–æ–±–µ–¥
    if not win_counts:
        # –ï—Å–ª–∏ –≤—Å–µ –≤—ã–±—Ä–∞–ª–∏ –æ–¥–Ω–æ –∏ —Ç–æ –∂–µ, –Ω–∏—á—å—è
        await channel.send("ü§ù –ù–∏—á—å—è! –í—Å–µ –∏–≥—Ä–æ–∫–∏ –≤—ã–±—Ä–∞–ª–∏ –æ–¥–∏–Ω–∞–∫–æ–≤—ã–π –ø—Ä–µ–¥–º–µ—Ç.")
    else:
        max_wins = max(win_counts.values())
        winners = [player_id for player_id, wins in win_counts.items() if wins == max_wins]
        
        # –ï—Å–ª–∏ –µ—Å—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ –ø–æ–±–µ–¥–∏—Ç–µ–ª–µ–π —Å –æ–¥–∏–Ω–∞–∫–æ–≤—ã–º —Å—á–µ—Ç–æ–º
        if len(winners) > 1:
            winners_mentions = [bot.get_user(w_id).mention for w_id in winners]
            await channel.send(f"üèÜ –ù–∏—á—å—è –º–µ–∂–¥—É: {', '.join(winners_mentions)}! –£ –≤—Å–µ—Ö –ø–æ {max_wins} –ø–æ–±–µ–¥.")
            
            # –í—Å–µ–º –ø–æ–±–µ–¥–∏—Ç–µ–ª—è–º –¥–æ–±–∞–≤–ª—è–µ–º –ø–æ –æ–¥–Ω–æ–º—É –æ—á–∫—É
            for winner_id in winners:
                player_scores[winner_id] += 1
        else:
            # –û–¥–∏–Ω –ø–æ–±–µ–¥–∏—Ç–µ–ª—å
            winner_id = winners[0]
            winner = bot.get_user(winner_id)
            player_scores[winner_id] += 1
            
            await channel.send(f"üèÜ –ü–æ–±–µ–¥–∏–ª {winner.mention} —Å {max_wins} –ø–æ–±–µ–¥–∞–º–∏! (–í—Å–µ–≥–æ –ø–æ–±–µ–¥: {player_scores[winner_id]})")
    
    # –£–¥–∞–ª—è–µ–º –∏–≥—Ä—É –∏–∑ –∞–∫—Ç–∏–≤–Ω—ã—Ö
    del active_games[game_id]

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —ç–º–æ–¥–∑–∏ –¥–ª—è –≤—ã–±–æ—Ä–∞
def get_emoji(choice):
    if choice == "rock":
        return "ü™®"
    elif choice == "paper":
        return "üìÑ"
    elif choice == "scissors":
        return "‚úÇÔ∏è"
    return ""

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –ø–æ–±–µ–¥–∏—Ç–µ–ª—è –º–µ–∂–¥—É –¥–≤—É–º—è –≤—ã–±–æ—Ä–∞–º–∏
def beats(choice1, choice2):
    if choice1 == "rock":
        return choice2 == "scissors"
    elif choice1 == "paper":
        return choice2 == "rock"
    elif choice1 == "scissors":
        return choice2 == "paper"
    return False

# –ö–æ–º–∞–Ω–¥—ã –¥–ª—è –≤—ã–±–æ—Ä–∞ –≤ –∏–≥—Ä–µ
@bot.slash_command(
    name="rock",
    description="–í—ã–±—Ä–∞—Ç—å –∫–∞–º–µ–Ω—å –≤ –∏–≥—Ä–µ",
    guild_ids=[994523162148601886]
)
async def rock(inter):
    await make_choice(inter, "rock", "ü™® –ö–∞–º–µ–Ω—å")

@bot.slash_command(
    name="paper",
    description="–í—ã–±—Ä–∞—Ç—å –±—É–º–∞–≥—É –≤ –∏–≥—Ä–µ",
    guild_ids=[994523162148601886]
)
async def paper(inter):
    await make_choice(inter, "paper", "üìÑ –ë—É–º–∞–≥–∞")

@bot.slash_command(
    name="scissors",
    description="–í—ã–±—Ä–∞—Ç—å –Ω–æ–∂–Ω–∏—Ü—ã –≤ –∏–≥—Ä–µ",
    guild_ids=[994523162148601886]
)
async def scissors(inter):
    await make_choice(inter, "scissors", "‚úÇÔ∏è –ù–æ–∂–Ω–∏—Ü—ã")

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –≤—ã–±–æ—Ä–∞ –∏–≥—Ä–æ–∫–∞
async def make_choice(inter, choice, choice_name):
    # –ü—Ä–æ–≤–µ—Ä–∫–∞, —á—Ç–æ –∏–≥—Ä–∞ –∑–∞–ø—É—â–µ–Ω–∞ –≤ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–º –∫–∞–Ω–∞–ª–µ
    game_channel_id = 1353043535468826705  # –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ ID –≤–∞—à–µ–≥–æ –∏–≥—Ä–æ–≤–æ–≥–æ –∫–∞–Ω–∞–ª–∞
    
    if inter.channel.id != game_channel_id:
        return await inter.response.send_message(
            f"–ò–≥—Ä–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –≤ <#{game_channel_id}>!", 
            ephemeral=True
        )
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞, –µ—Å—Ç—å –ª–∏ –∞–∫—Ç–∏–≤–Ω–∞—è –∏–≥—Ä–∞
    if not active_games:
        return await inter.response.send_message(
            "–°–µ–π—á–∞—Å –Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω–æ–π –∏–≥—Ä—ã! –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ `/startgame` —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –∏–≥—Ä—É.",
            ephemeral=True
        )
    
    # –ë–µ—Ä–µ–º –ø–æ—Å–ª–µ–¥–Ω—é—é —Å–æ–∑–¥–∞–Ω–Ω—É—é –∏–≥—Ä—É
    game_id = list(active_games.keys())[-1]
    game = active_games[game_id]
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞, —á—Ç–æ –∏–≥—Ä–∞ —É–∂–µ –Ω–∞—á–∞–ª–∞—Å—å
    if game["status"] != "started":
        return await inter.response.send_message(
            "–ò–≥—Ä–∞ –µ—â–µ –Ω–µ –Ω–∞—á–∞–ª–∞—Å—å! –î–æ–∂–¥–∏—Ç–µ—Å—å –Ω–∞—á–∞–ª–∞ –∏–≥—Ä—ã.",
            ephemeral=True
        )
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞, —á—Ç–æ –∏–≥—Ä–æ–∫ –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏–ª—Å—è –∫ –∏–≥—Ä–µ
    if inter.author.id not in game["joined_players"]:
        return await inter.response.send_message(
            "–í—ã –Ω–µ –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏–ª–∏—Å—å –∫ —ç—Ç–æ–π –∏–≥—Ä–µ!",
            ephemeral=True
        )
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞, –¥–µ–ª–∞–ª –ª–∏ –∏–≥—Ä–æ–∫ —É–∂–µ –≤—ã–±–æ—Ä
    if inter.author.id in game["players"]:
        return await inter.response.send_message(
            "–í—ã —É–∂–µ —Å–¥–µ–ª–∞–ª–∏ —Å–≤–æ–π –≤—ã–±–æ—Ä –≤ —ç—Ç–æ–π –∏–≥—Ä–µ!",
            ephemeral=True
        )
    
    # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –≤—ã–±–æ—Ä –∏–≥—Ä–æ–∫–∞
    game["players"][inter.author.id] = choice
    await inter.response.send_message(
        f"–í—ã –≤—ã–±—Ä–∞–ª–∏ {choice_name}. –û–∂–∏–¥–∞–π—Ç–µ –æ–∫–æ–Ω—á–∞–Ω–∏—è –∏–≥—Ä—ã!",
        ephemeral=True
    )
    
    # –°–æ–æ–±—â–∞–µ–º –≤—Å–µ–º, —á—Ç–æ –∏–≥—Ä–æ–∫ —Å–¥–µ–ª–∞–ª –≤—ã–±–æ—Ä (–±–µ–∑ —Ä–∞—Å–∫—Ä—ã—Ç–∏—è —Å–∞–º–æ–≥–æ –≤—ã–±–æ—Ä–∞)
    await inter.channel.send(f"{inter.author.mention} —Å–¥–µ–ª–∞–ª —Å–≤–æ–π –≤—ã–±–æ—Ä!")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –≤—Å–µ –ª–∏ –∏–≥—Ä–æ–∫–∏ —Å–¥–µ–ª–∞–ª–∏ –≤—ã–±–æ—Ä
    if len(game["players"]) == len(game["joined_players"]):
        # –ï—Å–ª–∏ –≤—Å–µ —Å–¥–µ–ª–∞–ª–∏ –≤—ã–±–æ—Ä, –æ—Ç–º–µ–Ω—è–µ–º —Ç–∞–π–º–µ—Ä –∏ —Å—Ä–∞–∑—É –æ–ø—Ä–µ–¥–µ–ª—è–µ–º –ø–æ–±–µ–¥–∏—Ç–µ–ª—è
        if "match_timer" in game and not game["match_timer"].done():
            game["match_timer"].cancel()
        
        await inter.channel.send("‚ú® –í—Å–µ –∏–≥—Ä–æ–∫–∏ —Å–¥–µ–ª–∞–ª–∏ —Å–≤–æ–π –≤—ã–±–æ—Ä!")
        await determine_winners(inter.channel, game_id)

# –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ —Å—á–µ—Ç–∞
@bot.slash_command(
    name="score",
    description="–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å—á–µ—Ç –∏–≥—Ä–æ–∫–æ–≤",
    guild_ids=[994523162148601886]
)
async def score(inter):
    # –°–æ—Ä—Ç–∏—Ä—É–µ–º –∏–≥—Ä–æ–∫–æ–≤ –ø–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤—É –ø–æ–±–µ–¥
    sorted_scores = sorted(player_scores.items(), key=lambda x: x[1], reverse=True)
    
    # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å–æ —Å—á–µ—Ç–æ–º
    score_message = "üèÜ **–¢–∞–±–ª–∏—Ü–∞ –ª–∏–¥–µ—Ä–æ–≤:**\n"
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –ø–æ–±–µ–¥—ã —É –∏–≥—Ä–æ–∫–æ–≤
    if not sorted_scores:
        score_message += "–ü–æ–∫–∞ –Ω–∏–∫—Ç–æ –Ω–µ –ø–æ–±–µ–∂–¥–∞–ª –≤ –∏–≥—Ä–∞—Ö!\n"
        # –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Å—Ç—ã–µ –º–µ—Å—Ç–∞ –¥–æ 10
        for i in range(1, 11):
            score_message += f"{i}. -\n"
    else:
        # –í—ã–≤–æ–¥–∏–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –ø–æ–±–µ–¥–∏—Ç–µ–ª–µ–π
        for i in range(1, 11):
            if i <= len(sorted_scores):
                player_id, score = sorted_scores[i-1]
                player = bot.get_user(player_id)
                player_name = player.name if player else f"–ò–≥—Ä–æ–∫ {player_id}"
                score_message += f"{i}. {player_name}: {score} –ø–æ–±–µ–¥\n"
            else:
                # –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Å—Ç—ã–µ –º–µ—Å—Ç–∞, –µ—Å–ª–∏ –ø–æ–±–µ–¥–∏—Ç–µ–ª–µ–π –º–µ–Ω—å—à–µ 10
                score_message += f"{i}. -\n"
    
    await inter.response.send_message(score_message)

# –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –æ—Ç–º–µ–Ω—ã –∏–≥—Ä—ã
@bot.slash_command(
    name="cancelgame",
    description="–û—Ç–º–µ–Ω–∏—Ç—å —Ç–µ–∫—É—â—É—é –∏–≥—Ä—É",
    guild_ids=[994523162148601886]
)
async def cancelgame(inter):
    if not active_games:
        return await inter.response.send_message("–°–µ–π—á–∞—Å –Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö –∏–≥—Ä!", ephemeral=True)
    
    game_id = list(active_games.keys())[-1]
    game = active_games[game_id]
    
    # –¢–æ–ª—å–∫–æ —Å–æ–∑–¥–∞—Ç–µ–ª—å –∏–≥—Ä—ã –∏–ª–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –º–æ–∂–µ—Ç –æ—Ç–º–µ–Ω–∏—Ç—å –∏–≥—Ä—É
    if inter.author.id != game["created_by"] and not inter.author.guild_permissions.administrator:
        return await inter.response.send_message(
            "–¢–æ–ª—å–∫–æ —Å–æ–∑–¥–∞—Ç–µ–ª—å –∏–≥—Ä—ã –∏–ª–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –º–æ–∂–µ—Ç –æ—Ç–º–µ–Ω–∏—Ç—å –∏–≥—Ä—É!",
            ephemeral=True
        )
    
    # –û—Ç–º–µ–Ω—è–µ–º —Ç–∞–π–º–∞—É—Ç—ã
    if "timeout_task" in game and not game["timeout_task"].done():
        game["timeout_task"].cancel()
    
    if "match_timer" in game and not game["match_timer"].done():
        game["match_timer"].cancel()
    
    # –£–¥–∞–ª—è–µ–º –∏–≥—Ä—É
    del active_games[game_id]
    
    await inter.response.send_message("üõë –ò–≥—Ä–∞ –±—ã–ª–∞ –æ—Ç–º–µ–Ω–µ–Ω–∞!")

# –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ —Ç–æ–∫–µ–Ω–æ–≤
@bot.slash_command(
    name="register_tokens",
    description="–ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å —Ç–æ–∫–µ–Ω—ã –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è CS2",
    guild_ids=[994523162148601886]
)
async def register_tokens(
    inter,
    match_token: str = commands.Param(description="Match Token"),
    auth_code: str = commands.Param(description="Authentication Code"),
    steam_api_key: str = commands.Param(description="Steam API Key")
):
    result = tracker.register_tokens(match_token, auth_code, steam_api_key, inter.author.id)
    await inter.response.send_message(result, ephemeral=True)

# –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Ç–æ–∫–µ–Ω–∞—Ö
@bot.slash_command(
    name="token_info",
    description="–ü–æ–∫–∞–∑–∞—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö —Ç–æ–∫–µ–Ω–∞—Ö",
    guild_ids=[994523162148601886]
)
async def token_info(inter):
    token_info = tracker.get_token_info()
    if token_info:
        user_id, registration_time = token_info
        user = bot.get_user(user_id)
        user_name = user.name if user else f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_id}"
        
        embed = disnake.Embed(
            title="–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ç–æ–∫–µ–Ω–∞—Ö",
            color=disnake.Color.blue()
        )
        embed.add_field(
            name="–ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–ª",
            value=f"{user_name}",
            inline=False
        )
        embed.add_field(
            name="–î–∞—Ç–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏",
            value=registration_time.strftime("%d.%m.%Y %H:%M:%S"),
            inline=False
        )
        
        await inter.response.send_message(embed=embed, ephemeral=True)
    else:
        await inter.response.send_message(
            "–¢–æ–∫–µ–Ω—ã –µ—â–µ –Ω–µ –±—ã–ª–∏ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã!",
            ephemeral=True
        )

# –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∏–≥—Ä–æ–∫–∞
@bot.slash_command(
    name="add_player",
    description="–î–æ–±–∞–≤–∏—Ç—å –∏–≥—Ä–æ–∫–∞ –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è",
    guild_ids=[994523162148601886]
)
async def add_player(
    inter,
    steam_id: str = commands.Param(description="Steam ID –∏–≥—Ä–æ–∫–∞")
):
    result = tracker.add_player_to_monitor(steam_id, NOTIFICATION_CHANNEL_ID)
    await inter.response.send_message(result, ephemeral=True)

# –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è –∏–≥—Ä–æ–∫–∞
@bot.slash_command(
    name="remove_player",
    description="–£–¥–∞–ª–∏—Ç—å –∏–≥—Ä–æ–∫–∞ –∏–∑ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è",
    guild_ids=[994523162148601886]
)
async def remove_player(
    inter,
    steam_id: str = commands.Param(description="Steam ID –∏–≥—Ä–æ–∫–∞")
):
    result = tracker.remove_player_from_monitor(steam_id)
    await inter.response.send_message(result, ephemeral=True)

# –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ —Å–ø–∏—Å–∫–∞ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–µ–º—ã—Ö –∏–≥—Ä–æ–∫–æ–≤
@bot.slash_command(
    name="list_players",
    description="–ü–æ–∫–∞–∑–∞—Ç—å —Å–ø–∏—Å–æ–∫ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–µ–º—ã—Ö –∏–≥—Ä–æ–∫–æ–≤",
    guild_ids=[994523162148601886]
)
async def list_players(inter):
    players = tracker.get_monitored_players()
    if players:
        response = "–û—Ç—Å–ª–µ–∂–∏–≤–∞–µ–º—ã–µ –∏–≥—Ä–æ–∫–∏:\n" + "\n".join(players)
    else:
        response = "–°–ø–∏—Å–æ–∫ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–µ–º—ã—Ö –∏–≥—Ä–æ–∫–æ–≤ –ø—É—Å—Ç"
    await inter.response.send_message(response, ephemeral=True)

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–ø—É—Å–∫–∞ HTTP —Å–µ—Ä–≤–µ—Ä–∞
def run_http_server():
    port = int(os.getenv('PORT', 8000))
    server = http.server.HTTPServer(('0.0.0.0', port), http.server.SimpleHTTPRequestHandler)
    server.serve_forever()

# –ó–∞–ø—É—Å–∫ HTTP —Å–µ—Ä–≤–µ—Ä–∞ –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º –ø–æ—Ç–æ–∫–µ
http_thread = threading.Thread(target=run_http_server, daemon=True)
http_thread.start()

@bot.slash_command(name="yesno", description="–ù–∞—á–∞—Ç—å –∏–≥—Ä—É '–î–∞ –∏–ª–∏ –ù–µ—Ç'")
async def yesno(inter: disnake.ApplicationCommandInteraction):
    question = yes_no_game.get_random_question()
    
    # –°–æ–∑–¥–∞–µ–º –∫–Ω–æ–ø–∫–∏
    buttons = disnake.ui.ActionRow(
        disnake.ui.Button(label="–î–∞", style=disnake.ButtonStyle.green, custom_id="yes"),
        disnake.ui.Button(label="–ù–µ—Ç", style=disnake.ButtonStyle.red, custom_id="no")
    )
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤–æ–ø—Ä–æ—Å –≤ —É–∫–∞–∑–∞–Ω–Ω—ã–π –∫–∞–Ω–∞–ª
    channel = bot.get_channel(1353364406293106759)
    await channel.send(
        f"üéÆ –ò–≥—Ä–∞ '–î–∞ –∏–ª–∏ –ù–µ—Ç' –æ—Ç {inter.author.mention}\n"
        f"‚ùì {question['question']}\n"
        f"üìö –ö–∞—Ç–µ–≥–æ—Ä–∏—è: {question['category']}",
        components=[buttons]
    )
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –∏–≥—Ä–æ–∫—É
    await inter.response.send_message("–í–æ–ø—Ä–æ—Å –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –≤ –∫–∞–Ω–∞–ª –∏–≥—Ä—ã!", ephemeral=True)
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤–æ–ø—Ä–æ—Å –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –æ—Ç–≤–µ—Ç–∞
    active_games[inter.id] = question

@bot.slash_command(name="stats", description="–ü–æ–∫–∞–∑–∞—Ç—å –≤–∞—à—É —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –≤ –∏–≥—Ä–µ '–î–∞ –∏–ª–∏ –ù–µ—Ç'")
async def stats(inter: disnake.ApplicationCommandInteraction):
    stats_text = yes_no_game.get_player_stats(str(inter.author.id))
    await inter.response.send_message(stats_text, ephemeral=True)

@bot.slash_command(name="top", description="–ü–æ–∫–∞–∑–∞—Ç—å —Ç–æ–ø-3 –∏–≥—Ä–æ–∫–æ–≤ –≤ –∏–≥—Ä–µ '–î–∞ –∏–ª–∏ –ù–µ—Ç'")
async def top(inter: disnake.ApplicationCommandInteraction):
    top_players = yes_no_game.get_top_players()
    
    if not top_players:
        await inter.response.send_message("–ü–æ–∫–∞ –Ω–µ—Ç –∏–≥—Ä–æ–∫–æ–≤ –≤ —Ç–æ–ø–µ. –°—ã–≥—Ä–∞–π—Ç–µ –Ω–µ—Å–∫–æ–ª—å–∫–æ –∏–≥—Ä! (–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç—Å—è –º–µ–∂–¥—É —Å–µ—Å—Å–∏—è–º–∏)")
        return
    
    response = "üèÜ –¢–æ–ø-3 –∏–≥—Ä–æ–∫–æ–≤ (—Å–æ—Ö—Ä–∞–Ω—è–µ—Ç—Å—è –º–µ–∂–¥—É —Å–µ—Å—Å–∏—è–º–∏):\n\n"
    for i, player in enumerate(top_players, 1):
        user = await bot.fetch_user(int(player["id"]))
        response += f"{i}. {user.name}: {player['points']} –æ—á–∫–æ–≤ ({player['accuracy']:.1f}%)\n"
    
    await inter.response.send_message(response)

@bot.event
async def on_button_click(inter: disnake.MessageInteraction):
    if inter.component.custom_id in ["yes", "no"]:
        if inter.message.interaction.id not in active_games:
            await inter.response.send_message("–ò–≥—Ä–∞ —É–∂–µ –∑–∞–∫–æ–Ω—á–µ–Ω–∞!", ephemeral=True)
            return
        
        question = active_games[inter.message.interaction.id]
        answer = "–¥–∞" if inter.component.custom_id == "yes" else "–Ω–µ—Ç"
        
        correct = yes_no_game.check_answer(question, answer, str(inter.author.id))
        
        # –û—Ç–∫–ª—é—á–∞–µ–º –∫–Ω–æ–ø–∫–∏
        buttons = disnake.ui.ActionRow(
            disnake.ui.Button(label="–î–∞", style=disnake.ButtonStyle.green, custom_id="yes", disabled=True),
            disnake.ui.Button(label="–ù–µ—Ç", style=disnake.ButtonStyle.red, custom_id="no", disabled=True)
        )
        
        # –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –∫–∞–Ω–∞–ª–µ
        await inter.message.edit(components=[buttons])
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç –≤ –∫–∞–Ω–∞–ª
        channel = bot.get_channel(1353364406293106759)
        result_emoji = "‚úÖ" if correct else "‚ùå"
        result_text = "–ø—Ä–∞–≤–∏–ª—å–Ω–æ" if correct else "–Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ"
        await channel.send(
            f"{result_emoji} {inter.author.mention} –æ—Ç–≤–µ—Ç–∏–ª {result_text}!\n"
            f"–ü—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç: {question['answer']}"
        )
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç –∏–≥—Ä–æ–∫—É
        if correct:
            await inter.response.send_message("‚úÖ –ü—Ä–∞–≤–∏–ª—å–Ω–æ!", ephemeral=True)
        else:
            await inter.response.send_message(f"‚ùå –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ! –ü—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç: {question['answer']}", ephemeral=True)
        
        # –£–¥–∞–ª—è–µ–º –≤–æ–ø—Ä–æ—Å –∏–∑ –∞–∫—Ç–∏–≤–Ω—ã—Ö –∏–≥—Ä
        del active_games[inter.message.interaction.id]

# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
bot.run(os.getenv('DISCORD_TOKEN'))